name: testing

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop']

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        go: [
          '1.20',
          '1.21',
          '1.22',
        ]
        include:
          # Set the minimum Go patch version for the given Go minor
          - go: '1.20'
            GO_VERSION: '~1.20.0'
          - go: '1.21'
            GO_VERSION: '~1.21.0'
          - go: '1.22'
            GO_VERSION: '~1.22.0'
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the source code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.GO_VERSION }}
          check-latest: true

      - name: Print environment
        id: vars
        run: |
          printf "Using Go at $(which go) (version $(go version))\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env

      - name: Run tests
        run: GO_ARGS="-v -race -covermode=atomic -coverprofile=coverage.out" make tests

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: github.ref == 'refs/heads/develop'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true